apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId 'com.moonpi.swiftnotes'
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 11
        versionName '3.1.4'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    buildToolsVersion '28.0.0'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-core-ui:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation 'com.microsoft.appcenter:espresso-test-extension:1.2'

    androidTestImplementation 'com.microsoft.appcenter:appium-test-extension:1.0'
    testImplementation group: 'com.microsoft.appcenter', name: 'appium-test-extension', version: '1.0'
}

apply plugin: 'maven'

task createPom {
    pom {
//        withXml {
//            def dependenciesNode = asNode().appendNode('dependencies')
//
//            //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
//            configurations.testCompile.allDependencies.each {
//                def dependencyNode = dependenciesNode.appendNode('dependency')
//                dependencyNode.appendNode('groupId', it.group)
//                dependencyNode.appendNode('artifactId', it.name)
//                dependencyNode.appendNode('version', it.version)
//            }
//            def profilesNode = asNode().appendNode('profiles')
//            profilesNode.append(new XmlParser().parse('https://raw.githubusercontent.com/Microsoft/AppCenter-Test-Appium-Java-Extensions/master/gradleuploadprofilesnippet.xml'))
//        }

        project {
            dependencies {
                configurations.testCompile.allDependencies.each {
                    dependency {
                        groupId it.group
                        artifactId it.name
                        version it.version

                    }
                }
            }

            repositories {
                repository {
                    id 'jcenter'
                    url 'https://jcenter.bintray.com'
                }
            }
        }

        withXml {
            def profilesNode = asNode().appendNode('profiles')
            profilesNode.append(new XmlParser().parse('https://raw.githubusercontent.com/Microsoft/AppCenter-Test-Appium-Java-Extensions/master/gradleuploadprofilesnippet.xml'))
        }
    }.writeTo("pom.xml")
}